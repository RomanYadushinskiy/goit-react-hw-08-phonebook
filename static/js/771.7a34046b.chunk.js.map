{"version":3,"file":"static/js/771.7a34046b.chunk.js","mappings":"8PAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAMnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,E,SCAjBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMT,GAAWU,EAAAA,EAAAA,IAAYZ,GACvBa,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GAKf,EAkBD,OACE,kBAAMC,SAjBa,SAAAH,GACnBA,EAAMI,iBACN,IAAMC,EAAU,CACdb,KAAAA,EACAE,OAAAA,GAGER,EAASoB,MAAK,SAAAC,GAAI,OAAKA,EAAKf,KAAKgB,gBAAkBH,EAAQb,KAAKgB,eACjED,EAAKb,SAAWW,EAAQX,MADL,IAElBe,MAAM,GAAD,OAAIjB,EAAJ,4BACLK,GAASa,EAAAA,EAAAA,IAAWL,IAExBZ,EAAQ,IACRE,EAAU,GACX,EAGC,WACE,qCAEE,kBACEgB,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZb,MAAOV,EACPwB,SAAUjB,QAGd,uCAEE,kBACEY,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZb,MAAOR,EACPsB,SAAUjB,QAGd,mBAAQY,KAAK,SAAb,2BAKL,ECtEYM,EAAc,WACzB,IAAMpB,GAAWC,EAAAA,EAAAA,MACXZ,GAAWU,EAAAA,EAAAA,IAAYZ,GACvBK,GAASO,EAAAA,EAAAA,IAAYR,GASrB8B,EALFhC,EAASG,QAAO,SAAAgB,GAAO,OACvBA,EAAQb,KAAKgB,cAAcW,SAAS9B,EAAOmB,cADpB,IAO3B,OACE,wBACGU,EAAiBE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAI7B,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACjC,OACE,2BACE,yBACGF,EADH,KACWE,MAEX,mBAAQiB,KAAK,SAASW,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAWF,GAA1B,EAA/B,sBAJOA,EASZ,KAGN,E,UC9BYG,EAAS,WACpB,IAAM3B,GAAWC,EAAAA,EAAAA,MACXT,GAASO,EAAAA,EAAAA,IAAYR,GAM3B,OACE,4BACE,kBACEuB,KAAK,OACLnB,KAAK,SACLU,MAAOb,EACP2B,SAVkB,SAAAS,GACtB5B,GAAS6B,EAAAA,EAAAA,GAAUD,EAAExB,OAAOC,OAC7B,EASKa,YAAY,2BAInB,ECpBYY,EAAW,WACtB,OACE,iBAAKC,MAAO,CACNC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WANb,WAQE,uCACA,SAAC5C,EAAD,KAEA,sCACA,SAACkC,EAAD,KACA,SAACP,EAAD,MAGL,EAED,G","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n        contacts.find(item => (item.name.toLowerCase() === contact.name.toLowerCase()\n    || item.number === contact.number))\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(contact))\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n    const findContacts = () => {\n    return (\n      contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    ));\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => dispatch(delContact(id))}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const getChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getChangeFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const Contacts = () => {\n  return (\n    <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          color: '#010101',\n        }}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["getContacts","state","contacts","items","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","contact","find","item","toLowerCase","alert","addContact","type","pattern","title","required","placeholder","onChange","ContactList","filteredContacts","includes","map","id","onClick","delContact","Filter","e","setFilter","Contacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}